/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package boom;

import java.awt.Toolkit;
import java.util.Timer;
import java.util.TimerTask;

/**
 *
 * @author larryvolz
 */
public class Countdown extends javax.swing.JFrame {

    /**
     * Creates new form Countdown
     */   
    
    
    public Countdown() {
        initComponents();
        Toolkit tk = Toolkit.getDefaultToolkit();
        int xsize = (int) tk.getScreenSize().getWidth();
        int ysize = (int) tk.getScreenSize().getHeight();
        this.setSize(xsize, ysize);
        
        //############################# EXPERIMENTAL TIMER ################################
        /**
         * TODO:
         * - do syntax for minutes and seconds
         * - get rid of error/calling CountdowScript.java?
         * - set it so it doesn't restart on re-calling the page
         * - set up an explosion protocol
         * - set up a won the game protocol
         */
        Timer timer = new Timer(); //new timer
        
        //SCAFFOLDING
        //int count1 = counter.counter2.getCounter();
        //System.out.println("int count1 = counter.counter2.getCounter(); from Countdown.java gives us: " + count1);
        
        TimerTask task = new TimerTask() {  
            //counter countIn = new counter();
            
            //GET COUNTER ENTERED FROM MainMenu and saved in...
            int count1 = counter.counter2.getCounter();
            
          
            
            
            String readableText;
            String secondsDisplay;
            String minutesDisplay;
            
            public void run() { 
                
                //COUNTDOWN LOGIC
                int minutes = count1/60;
                int seconds = count1%60;
                
                //convert countdown to readable
                minutesDisplay = Integer.toString(minutes);
                
                if (seconds >9){
                    secondsDisplay = Integer.toString(seconds);
                } else {
                    secondsDisplay = "0"+ Integer.toString(seconds);
                }
                
                readableText = minutesDisplay + ":" + secondsDisplay;
                
                //send countdown text to label
                countdownLabel.setText(readableText);
                
                
                
                
                count1 --;
                if (count1 == -1){
                    timer.cancel();                                       
                } //else if(isIt){
                   // timer.cancel();
                   // isIt = false;
               // }
        
                }
                  
        };
        //This just makes the code in here regular in timing - you can do whatever you want in here
        timer.scheduleAtFixedRate(task, 1000, 1000); // =  timer.scheduleAtFixedRate(task, delay, period);
               
                
        //############################# END EXPERIMENTAL TIMER ############################
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        countdownLabel = new javax.swing.JLabel();
        goToKeypadButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));

        countdownLabel.setBackground(new java.awt.Color(0, 0, 0));
        countdownLabel.setFont(new java.awt.Font("Monospaced", 0, 128)); // NOI18N
        countdownLabel.setForeground(new java.awt.Color(255, 0, 51));
        countdownLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        goToKeypadButton.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        goToKeypadButton.setText("Show Keypad");
        goToKeypadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goToKeypadButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(countdownLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(goToKeypadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(countdownLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(goToKeypadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void goToKeypadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goToKeypadButtonActionPerformed
        this.setVisible(false);
        new Keypad().setVisible(true);
    }//GEN-LAST:event_goToKeypadButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Countdown.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Countdown.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Countdown.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Countdown.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Countdown().setVisible(true);
            
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel countdownLabel;
    private javax.swing.JButton goToKeypadButton;
    // End of variables declaration//GEN-END:variables
}
